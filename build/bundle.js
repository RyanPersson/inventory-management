/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./build/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./img/3rings.png":
/*!************************!*\
  !*** ./img/3rings.png ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"60de8c697b06f50e86437504f1098c98.png\";\n\n//# sourceURL=webpack:///./img/3rings.png?");

/***/ }),

/***/ "./node_modules/css-loader/index.js!./src/css/tutorial-userData.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader!./src/css/tutorial-userData.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var escape = __webpack_require__(/*! ../../node_modules/css-loader/lib/url/escape.js */ \"./node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"#logo-head {\\n    height:7.5%;\\n    border-radius: 5px;\\n    margin: 0.5% 0.5% 0.25% 0.5%;\\n}\\n\\n\\n/* Inspector */\\n\\n#inspector {\\n  position: relative;\\n  width: 16%;\\n  height: 91.5%;\\n  float: left;\\n  margin: 0.25% 0.25% 0.5% 0.5%;\\n}\\n\\n#model-info {\\n  position: absolute;\\n  top: 7%;\\n  left: 2%;\\n  width: 90%;\\n}\\n\\n#node-info {\\n  position: absolute;\\n  top: 30%;\\n  left: 2%;\\n}\\n\\n#inventory-info {\\n  position: absolute;\\n  top: 48%;\\n  left: 2%;\\n}\\n\\n#inspector-info {\\n  height: 100%;\\n}\\n\\n\\n/* Canvas */\\n\\n#canvas {\\n  width: 60%;\\n  height: 60%;\\n  position: relative;\\n  float: left;\\n  margin: 0.25% 0.25% 0.25% 0.25%;\\n}\\n\\n#model-browser {\\n  width: 22%;\\n  height: 91.5%;\\n  margin: 0.25% 0.5% 0.5% 0.25%;\\n  float: left;\\n}\\n\\n#display-filter {\\n  position: absolute;\\n  width: 60%;\\n  height: 30%;\\n  top: 68.75%;\\n  left: 17%;\\n}\\n\\n#displayModeContainer {\\n  font-size: smaller;\\n  position: absolute;\\n  width: 98%;\\n  bottom: 3%;\\n  padding: 1% 17% 0% 16%;\\n  left: 1%;\\n  overflow: unset;\\n}\\n\\n#filterSliders {\\n  position: absolute;\\n  width: 48.5%;\\n  height: 65%;\\n  top: 13%;\\n  left: 1%;\\n}\\n\\n#companyFilter {\\n  position: absolute;\\n  width: 48.5%;\\n  height: 65%;\\n  top: 13%;\\n  left: 50.5%;\\n  font-size: smaller;\\n}\\n\\n#companyLabel {\\n  margin: 2% 2% 1% 2%;\\n}\\n\\n.companyFilterButton {\\n  border-radius: 5px;\\n  width: 30%;\\n  height: 75%;\\n  top: 20%;\\n  position: relative;\\n  left: 2%;\\n}\\n\\n.companyFilterButton.selected {\\n  border-style: inset;\\n  border-color: #c1c1c1;\\n  border-width: 4px;\\n}\\n\\n.info-text-cat {\\n  font-family: quicksand;\\n  font-size: small;\\n  font-weight: bolder;\\n  margin: 5px 5px 5px 10px;\\n  line-height: 0.25;\\n}\\n\\n#models-scroller {\\n  width: 96%;\\n  height: 89%;\\n  position: relative;\\n  left: 2%;\\n  /* right: 3%; */\\n  border: 1px solid black;\\n  top: 4.5%;\\n  border-radius: 5px;\\n  /* float: left; */\\n  overflow-y: scroll;\\n  white-space: nowrap;\\n  /* margin: 2% 1% 1% 2%; */\\n}\\n\\n.subcomp {\\n  border: 1px solid black;\\n  border-radius: 5px;\\n  overflow-y: scroll;\\n  white-space: nowrap;\\n}\\n\\n#model-browser-buttons {\\n  position: relative;\\n  width: 40%;\\n  top: 5.5%;\\n  left: 33.5%;\\n}\\n\\n.inspector-values {\\n  font-size: smaller;\\n  margin-left: 0.5rem;\\n}\\n\\n.model-thumb {\\n  border: 1px solid black;\\n  margin: 3% 3% 0% 3%;\\n  border-radius: 5px;\\n  text-align: center;\\n  float: left;\\n  z-index: 10;\\n  background-color:#96b3d1;\\n}\\n\\n.model-thumb img {\\n  border-radius: 5px;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n#file-input {\\n  height: 0px;\\n  width: 0px;\\n  visibility: hidden;\\n}\\n\\n#model-info-keys {\\n  float: left;\\n  padding-left: 10px;\\n  vertical-align: middle;\\n  padding-top: 5px;\\n  font-size: smaller;\\n\\n}\\n\\n#model-info-values {\\n  font-weight: normal;\\n  font-size: small;\\n  float: left;\\n  padding-left: 10px;\\n  vertical-align: middle;\\n  padding-top: 5px;\\n\\n}\\n\\n#node-info-keys {\\n  float: left;\\n  padding-left: 10px;\\n  vertical-align: middle;\\n  padding-top: 5px;\\n  font-size: smaller;\\n\\n}\\n\\n#node-info-values {\\n  font-weight: normal;\\n  font-size: small;\\n  float: left;\\n  padding-left: 10px;\\n  vertical-align: middle;\\n  padding-top: 5px;\\n\\n}\\n\\n#inv-info-keys {\\n  float: left;\\n  padding-left: 10px;\\n  vertical-align: middle;\\n  padding-top: 5px;\\n  font-size: smaller;\\n}\\n\\n#inv-info-values {\\n  font-weight: normal;\\n  font-size: small;\\n  float: left;\\n  padding-left: 10px;\\n  vertical-align: middle;\\n  padding-top: 5px;\\n\\n}\\n\\nbody, html {\\n    height: 99%;\\n    background-color: #883738;\\n    font-family: quicksand;\\n}\\n\\n.comp-container {\\n    border: 2px solid black;\\n    border-radius: 5px;\\n    background-color: #dedddd;\\n}\\n\\n\\n.comp-label {\\n  position: absolute;\\n  padding: 4px 6px 4px 6px;\\n  font-family: quicksand;\\n  font-weight: bold;\\n  font-size: smaller;\\n}\\n\\n#ts3dlogo {\\n  height: 100%;\\n  width: 50%;\\n  /* left: 0%; */\\n  position: relative;\\n  float: left;\\n}\\n\\n#ts3dlogo img {\\n  max-width:50%;\\n  max-height:60%;\\n  top: 22%;\\n  left: 2%;\\n  position: relative;\\n}\\n\\n#hclogo {\\n  height: 100%;\\n  width: 50%;\\n  float: left;\\n  position: relative\\n}\\n\\n#hclogo img{\\n  max-width: 60%;\\n  max-height: 65%;\\n  top: 20%;\\n  display: flex;\\n  float: right;\\n  right: 2%;\\n  position: relative;\\n}\\n\\n.button-row {\\n  margin: 2px;\\n  border: 1px solid black;\\n  background-color: #00629e;\\n  font-family: quicksand;\\n  font-size: x-small;\\n}\\n\\n#price-slider {\\n  position: absolute;\\n  top: 53%;\\n  left: 5%;\\n  font-size: small;\\n  width: 88%;\\n\\n}\\n\\n.pSlider {\\n  margin-bottom: 2%;\\n}\\n\\n#stock-slider {\\n  position: absolute;\\n  top: 7%;\\n  left: 5%;\\n  font-size: small;\\n  width: 88%;\\n}\\n\\n\\n.slidecontainer {\\n  width: 100%; /* Width of the outside container */\\n}\\n\\n/* The slider itself */\\n.slider {\\n  -webkit-appearance: none;  /* Override default CSS styles */\\n  appearance: none;\\n  width: 100%; /* Full-width */\\n  height: 2px; /* Specified height */\\n  background: #883737; \\n  outline: none; /* Remove outline */\\n  opacity: 1.0; /* Set transparency (for mouse-over effects on hover) */\\n  -webkit-transition: .2s; /* 0.2 seconds transition on hover */\\n  transition: opacity .2s;\\n}\\n\\n/* Mouse-over effects */\\n.slider:hover {\\n  opacity: 1; /* Fully shown on mouse-over */\\n}\\n\\n/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */ \\n.slider::-webkit-slider-thumb {\\n  -webkit-appearance: none; /* Override default look */\\n  appearance: none;\\n  width: 22px; /* Set a specific slider handle width */\\n  height: 22px; /* Slider handle height */\\n  cursor: pointer; /* Cursor on hover */\\n  background: url(\" + escape(__webpack_require__(/*! ../../img/3rings.png */ \"./img/3rings.png\")) + \");\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n}\\n\\n.slider::-moz-range-thumb {\\n  width: 25px; /* Set a specific slider handle width */\\n  height: 25px; /* Slider handle height */\\n  cursor: pointer; /* Cursor on hover */\\n  background: url(\" + escape(__webpack_require__(/*! ../../img/3rings.png */ \"./img/3rings.png\")) + \");\\n  background-repeat: no-repeat;\\n}\\n\\n\\n\\n.price-slider2 {\\n  position: relative;\\n  text-align: center;\\n}\\n\\n.price-slider2 input {\\n  pointer-events: none;\\n  position: absolute;\\n  left: 0;\\n  top: 15px;\\n  width: 100%;\\n  outline: none;\\n  height: 2px;\\n  margin: 0; \\n  padding: 0;\\n  border-radius: 8px;\\n}\\n\\n.price-slider2 input::-webkit-slider-thumb {\\n  pointer-events: all;\\n  position: relative;\\n  z-index: 1;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  height: 24px;\\n  width: 24px;\\n  border-radius: 12px;\\n  background-color: white;\\n  background: url(\" + escape(__webpack_require__(/*! ../../img/3rings.png */ \"./img/3rings.png\")) + \");\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n}\\n\\n/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */ \\n.price-slider2::-webkit-slider-thumb {\\n  -webkit-appearance: none; /* Override default look */\\n  appearance: none;\\n  width: 22px; /* Set a specific slider handle width */\\n  height: 22px; /* Slider handle height */\\n  cursor: pointer; /* Cursor on hover */\\n  background: url(\" + escape(__webpack_require__(/*! ../../img/3rings.png */ \"./img/3rings.png\")) + \");\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n}\\n\\n/* width */\\n::-webkit-scrollbar {\\n  width: 0%;\\n  height: 0%;\\n}\\n\\n/* Handle */\\n::-webkit-scrollbar-thumb {\\n  background: #888; \\n  border-radius: 5px;\\n}\\n\\n/* Handle on hover */\\n::-webkit-scrollbar-thumb:hover {\\n  background: #555; \\n}\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack:///./src/css/tutorial-userData.css?./node_modules/css-loader");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif (item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function (modules, mediaQuery) {\n\t\tif (typeof modules === \"string\") modules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif (typeof id === \"number\") alreadyImportedModules[id] = true;\n\t\t}\n\t\tfor (i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif (typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif (mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if (mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n//# sourceURL=webpack:///./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/css-loader/lib/url/escape.js":
/*!***************************************************!*\
  !*** ./node_modules/css-loader/lib/url/escape.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url;\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"';\n    }\n\n    return url;\n};\n\n//# sourceURL=webpack:///./node_modules/css-loader/lib/url/escape.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n\t// get current location\n\tvar location = typeof window !== \"undefined\" && window.location;\n\n\tif (!location) {\n\t\tthrow new Error(\"fixUrls requires window.location\");\n\t}\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t\treturn css;\n\t}\n\n\tvar baseUrl = location.protocol + \"//\" + location.host;\n\tvar currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n This regular expression is just a way to recursively match brackets within\n a string.\n \t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n    (  = Start a capturing group\n      (?:  = Start a non-capturing group\n          [^)(]  = Match anything that isn't a parentheses\n          |  = OR\n          \\(  = Match a start parentheses\n              (?:  = Start another non-capturing groups\n                  [^)(]+  = Match anything that isn't a parentheses\n                  |  = OR\n                  \\(  = Match a start parentheses\n                      [^)(]*  = Match anything that isn't a parentheses\n                  \\)  = Match a end parentheses\n              )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n  \\)  = Match a close parens\n \t /gi  = Get all matches, not the first.  Be case insensitive.\n  */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl.trim().replace(/^\"(.*)\"$/, function (o, $1) {\n\t\t\treturn $1;\n\t\t}).replace(/^'(.*)'$/, function (o, $1) {\n\t\t\treturn $1;\n\t\t});\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t\treturn fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t\t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/css/tutorial-userData.css":
/*!***************************************!*\
  !*** ./src/css/tutorial-userData.css ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!./tutorial-userData.css */ \"./node_modules/css-loader/index.js!./src/css/tutorial-userData.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/css/tutorial-userData.css?");

/***/ }),

/***/ "./src/js/DisplayFilter.js":
/*!*********************************!*\
  !*** ./src/js/DisplayFilter.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DisplayFilter; });\nclass DisplayFilter {\n    constructor(viewer) {\n        this._viewer = viewer;\n        this._filterSelection = \"isolateChoice\";\n        this._gradientSelection = \"offGradientChoice\";\n        this._priceColorMap = new Map();\n        this._stockColorMap = new Map();\n        this._defaultColors = new Map();\n        this._filteredNodes = [];\n        this._sliderVals = new Map();\n        this._companyFilter = [];\n        let selectedCompanies = document.getElementsByClassName(\"selected\");\n        for (let element of selectedCompanies) {\n            let inputElement = element;\n            this._companyFilter.push(inputElement.alt);\n        }\n        let sliderElements = document.querySelectorAll(\"#psMinSlider, #psMaxSlider, #ssMinSlider, #ssMaxSlider\");\n        sliderElements.forEach(x => {\n            let slider = x;\n            switch (slider.id) {\n                case \"psMinSlider\":\n                    this._sliderVals.set(\"psMinVal\", slider.value);\n                    break;\n                case \"psMaxSlider\":\n                    this._sliderVals.set(\"psMaxVal\", slider.value);\n                    break;\n                case \"ssMinSlider\":\n                    this._sliderVals.set(\"ssMinVal\", slider.value);\n                    break;\n                case \"ssMaxSlider\":\n                    this._sliderVals.set(\"ssMaxVal\", slider.value);\n                    break;\n                default:\n                    console.log(\"Slider element value not found.\");\n            }\n        });\n    }\n    updateSliderRange(id) {\n        let sliderElement = document.getElementById(`${id}Slider`);\n        let key = id + \"Val\";\n        this._sliderVals.set(key, sliderElement.value);\n    }\n    updateSliderLabels(filter) {\n        let id1 = filter.substring(0, 2) + \"MinVal\";\n        let id2 = filter.substring(0, 2) + \"MaxVal\";\n        let minVal = parseInt(this._sliderVals.get(id1));\n        let maxVal = parseInt(this._sliderVals.get(id2));\n        if (minVal >= maxVal) {\n            minVal = maxVal - 1;\n            this._sliders.get(id1).value = minVal.toString();\n            this._sliderVals.set(id1, minVal.toString());\n            return;\n        }\n        if (maxVal <= minVal) {\n            maxVal = minVal + 1;\n            this._sliders.get(id2).value = maxVal.toString();\n            this._sliderVals.set(id2, maxVal.toString());\n            return;\n        }\n        let valueLabels = document.querySelectorAll(`#${id1} , #${id2}`);\n        valueLabels[0].innerHTML = minVal.toString();\n        valueLabels[1].innerHTML = maxVal.toString();\n    }\n    gatherFilteredNodes(modelData) {\n        let pMinVal = parseInt(this._sliderVals.get(\"psMinVal\"));\n        let pMaxVal = parseInt(this._sliderVals.get(\"psMaxVal\"));\n        let sMinVal = parseInt(this._sliderVals.get(\"ssMinVal\"));\n        let sMaxVal = parseInt(this._sliderVals.get(\"ssMaxVal\"));\n        let pNodesPassed = [];\n        let sNodesPassed = [];\n        let mNodesPassed = [];\n        let valuesIterator = modelData.values();\n        for (let nodeValues of valuesIterator) {\n            if (nodeValues.Price >= pMinVal && nodeValues.Price <= pMaxVal) {\n                pNodesPassed.push(nodeValues.ID);\n            }\n            if (nodeValues.Stock >= sMinVal && nodeValues.Stock <= sMaxVal) {\n                sNodesPassed.push(nodeValues.ID);\n            }\n            if (this._companyFilter.indexOf(nodeValues.Manufacturer) !== -1) {\n                mNodesPassed.push(nodeValues.ID);\n            }\n        }\n        let psNodesPassed = pNodesPassed.filter(value => -1 !== sNodesPassed.indexOf(value));\n        this._filteredNodes = psNodesPassed.filter(value => -1 !== mNodesPassed.indexOf(value));\n        this.updateColorGradients(modelData);\n    }\n    setRenderingSelection() {\n        if (this._viewer.view.getDrawMode() === Communicator.DrawMode.XRay) {\n            this._viewer.selectionManager.clear();\n            this._viewer.view.setDrawMode(Communicator.DrawMode.WireframeOnShaded);\n        }\n        let promiseArray = [];\n        promiseArray.push(this._viewer.model.unsetNodesFaceColor([this._viewer.model.getAbsoluteRootNode()]));\n        promiseArray.push(this._viewer.model.setNodesVisibility([this._viewer.model.getAbsoluteRootNode()], true));\n        promiseArray.push(this._viewer.model.setNodesOpacity([this._viewer.model.getAbsoluteRootNode()], 1.0));\n        Promise.all(promiseArray).then(() => {\n            if (this._filterSelection === \"isolateChoice\") {\n                this._viewer.model.setNodesVisibility([this._viewer.model.getAbsoluteRootNode()], false).then(() => this._viewer.model.setNodesVisibility(this._filteredNodes, true));\n            } else if (this._filterSelection === \"transparentChoice\") {\n                this._viewer.model.setNodesOpacity([this._viewer.model.getAbsoluteRootNode()], 0.25);\n                this._viewer.model.setNodesOpacity(this._filteredNodes, 1.0);\n            } else if (this._filterSelection === \"xrayChoice\") {\n                this._viewer.view.setDrawMode(Communicator.DrawMode.XRay);\n                let sm = this._viewer.selectionManager;\n                sm.clear();\n                this._filteredNodes.forEach(nodeId => {\n                    sm.selectNode(nodeId, Communicator.SelectionMode.Add);\n                });\n            }\n            if (this._gradientSelection === \"priceGradientChoice\") {\n                this._viewer.model.setNodesColors(this._priceColorMap);\n            } else if (this._gradientSelection === \"stockGradientChoice\") {\n                this._viewer.model.setNodesColors(this._stockColorMap);\n            }\n        });\n    }\n    captureNativeColors(modelData) {\n        let valuesIterator = modelData.values();\n        for (let nodeValues of valuesIterator) {\n            this._viewer.model.getNodesEffectiveFaceColor([nodeValues.ID]).then(([color]) => {\n                this._defaultColors.set(nodeValues.ID, color);\n            });\n        }\n    }\n    updateColorGradients(modelData) {\n        let minPrice = 250,\n            maxPrice = 0,\n            minStock = 1000,\n            maxStock = 0;\n        this._filteredNodes.forEach(node => {\n            let nodeValues = modelData.get(node);\n            if (nodeValues.Price < minPrice) minPrice = nodeValues.Price;\n            if (nodeValues.Price > maxPrice) maxPrice = nodeValues.Price;\n            if (nodeValues.Stock < minStock) minStock = nodeValues.Stock;\n            if (nodeValues.Stock > maxStock) maxStock = nodeValues.Stock;\n        });\n        let valuesIterator = modelData.values();\n        for (let nodeValues of valuesIterator) {\n            if (this._filteredNodes.indexOf(nodeValues.ID) == -1) {\n                this._priceColorMap.set(nodeValues.ID, this._defaultColors.get(nodeValues.ID));\n                this._stockColorMap.set(nodeValues.ID, this._defaultColors.get(nodeValues.ID));\n            } else {\n                let pr = (nodeValues.Price - minPrice) / (maxPrice - minPrice) * 255;\n                let pb = (1 - (nodeValues.Price - minPrice) / (maxPrice - minPrice)) * 255;\n                let pg = (1 - Math.abs((nodeValues.Price - minPrice) / (maxPrice - minPrice) - (1 - (nodeValues.Price - minPrice) / (maxPrice - minPrice)))) * 255;\n                let sr = (1 - (nodeValues.Stock - minStock) / (maxStock - minStock)) * 255;\n                let sb = (1 - nodeValues.Stock / maxStock) * 50;\n                let sg = (nodeValues.Stock - minStock) / (maxStock - minStock) * 160;\n                this._priceColorMap.set(nodeValues.ID, new Communicator.Color(pr, pg, pb));\n                this._stockColorMap.set(nodeValues.ID, new Communicator.Color(sr, sg, 0));\n            }\n        }\n    }\n    addCompany(company) {\n        this._companyFilter.push(company);\n    }\n    removeCompany(company) {\n        let index = this._companyFilter.indexOf(company);\n        this._companyFilter.splice(index, 1);\n    }\n    setFilterSelection(filter) {\n        this._filterSelection = filter;\n    }\n    setGradientSelection(choice) {\n        this._gradientSelection = choice;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/DisplayFilter.js?");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_tutorial_userData_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/tutorial-userData.css */ \"./src/css/tutorial-userData.css\");\n/* harmony import */ var _css_tutorial_userData_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_tutorial_userData_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _DisplayFilter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DisplayFilter.js */ \"./src/js/DisplayFilter.js\");\n\n\n\nlet directoryPath = \"/inventory-management\";\n// Application logic will begin once DOM content is loaded\nwindow.onload = () => {\n  const app = new main();\n};\nclass main {\n  constructor() {\n    // Initialize a Map to quickly reference nodeId -> external app data\n    // The Map will be populated when a model is loaded\n    this._modelData = new Map();\n    // Instantiate the viewer\n    this._viewer = new Communicator.WebViewer({\n      containerId: \"viewer\",\n      empty: true\n    });\n    // The display filter class will help manage filtered nodes from UI choices\n    this._displayFilter = new _DisplayFilter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this._viewer);\n    this._viewer.start();\n    this._viewer.setCallbacks({\n      modelStructureReady: () => {\n        // Background color for viewers\n        this._viewer.view.setBackgroundColor(new Communicator.Color(100, 150, 200), new Communicator.Color(222, 222, 222));\n        // Additional viewer options\n        this._viewer.view.getAxisTriad().enable();\n        this._viewer.view.getNavCube().enable();\n        this._viewer.view.getNavCube().setAnchor(Communicator.OverlayAnchor.LowerRightCorner);\n        let loadButton = document.getElementById(\"open-model-button\");\n        loadButton.disabled = false;\n      },\n      selectionArray: selectionEvents => {\n        if (selectionEvents.length == 0) {\n          document.getElementById(\"node-id\").innerHTML = \"--\";\n          document.getElementById(\"node-name\").innerHTML = \"--\";\n          document.getElementById(\"inv-manufacturer\").innerHTML = \"--\";\n          document.getElementById(\"inv-select-cost\").innerHTML = \"--\";\n          document.getElementById(\"inv-total-stock\").innerHTML = \"--\";\n          document.getElementById(\"inv-avail-stock\").innerHTML = \"--\";\n          document.getElementById(\"inv-claimed\").innerHTML = \"--\";\n          document.getElementById(\"inv-location\").innerHTML = \"--\";\n          return;\n        }\n        // Otherwise, display node information for the first node in the selection array\n        const nodeId = selectionEvents[0].getSelection().getNodeId();\n        document.getElementById(\"node-id\").innerHTML = nodeId.toString() || \"Unknown\";\n        document.getElementById(\"node-name\").innerHTML = this._viewer.model.getNodeName(nodeId) || \"Node Name Not Defined\";\n        // If the selection nodeId is found in the application data, populate the inspector fields\n        if (this._modelData.has(nodeId)) {\n          let nodeData = this._modelData.get(nodeId);\n          document.getElementById(\"inv-manufacturer\").innerHTML = nodeData.Manufacturer;\n          document.getElementById(\"inv-select-cost\").innerHTML = `$ ${nodeData.Price.toFixed(2)}`;\n          document.getElementById(\"inv-total-stock\").innerHTML = nodeData.Stock.toString();\n          document.getElementById(\"inv-avail-stock\").innerHTML = (nodeData.Stock - nodeData.Reserved).toString();\n          document.getElementById(\"inv-claimed\").innerHTML = nodeData.Reserved.toString();\n          document.getElementById(\"inv-location\").innerHTML = nodeData.Location;\n        }\n      }\n    }); // End Callbacks\n    this.setEventListeners();\n    this.updateModelList();\n  } // End app Constructor\n  //Function to preload model files to be accessed through thumbnails\n  updateModelList() {\n    const thumbnailElements = document.getElementsByClassName(\"model-thumb\");\n    for (let thumbnail of thumbnailElements) {\n      let thumbnailElement = thumbnail;\n      thumbnailElement.onclick = e => {\n        e.preventDefault();\n        let elem = e.currentTarget;\n        let modelToLoad = elem.getAttribute(\"model\");\n        // Load the model into the scene when clicked\n        this.loadModel(modelToLoad);\n      };\n    }\n  }\n  // Function to load models and query any associated application data\n  loadModel(modelName) {\n    this._viewer.model.clear().then(() => {\n      const nodeName = \"Model-\" + modelName;\n      const modelNodeId = this._viewer.model.createNode(null, nodeName);\n      this._viewer.model.loadSubtreeFromScsFile(modelNodeId, directoryPath + \"/data/\" + modelName + \".scs\").then(() => {\n        this._viewer.view.fitWorld();\n        // Get the application data and map each NodeID as a key, and the rest of its data as a value\n        fetch(directoryPath + \"/data/database/\" + modelName + \".json\").then(resp => {\n          if (resp.ok) {\n            resp.json().then(data => {\n              let nodeData = data.NodeData;\n              let numEntries = nodeData.length;\n              let clippedID;\n              let totalCost = 0;\n              this._modelData.clear();\n              for (let i = 0; i < numEntries; ++i) {\n                clippedID = nodeData[i].ID;\n                this._modelData.set(clippedID, nodeData[i]);\n                totalCost += nodeData[i].Price;\n              }\n              // Display the total cost of the assembly\n              document.getElementById(\"inv-total-cost\").innerHTML = `$ ${totalCost.toFixed(2)}`;\n              this._displayFilter.captureNativeColors(this._modelData);\n              this._displayFilter.gatherFilteredNodes(this._modelData);\n              this._displayFilter.updateColorGradients(this._modelData);\n              this._displayFilter.setRenderingSelection();\n            });\n          } else {\n            alert(\"No JSON data for this Model was found.\");\n          }\n        });\n        // Get and set the rest of the model level info\n        const modelRoot = this._viewer.model.getNodeChildren(modelNodeId)[0];\n        const modelFileName = this._viewer.model.getModelFileNameFromNode(modelRoot);\n        const modelFileFormat = this._viewer.model.getModelFileTypeFromNode(modelRoot);\n        document.getElementById(\"model-file-name\").innerHTML = modelFileName || \"N/A\";\n        document.getElementById(\"model-file-type\").innerHTML = Communicator.FileType[modelFileFormat] || \"N/A\";\n      });\n    });\n  }\n  sliderOnInput(slider) {\n    this._displayFilter.updateSliderRange(slider);\n    this._displayFilter.updateSliderLabels(slider);\n    this._displayFilter.gatherFilteredNodes(this._modelData);\n    this._displayFilter.setRenderingSelection();\n  }\n  setEventListeners() {\n    document.getElementById(\"psMinSlider\").oninput = () => {\n      this.sliderOnInput(\"psMin\");\n    };\n    document.getElementById(\"psMaxSlider\").oninput = () => {\n      this.sliderOnInput(\"psMax\");\n    };\n    document.getElementById(\"ssMinSlider\").oninput = () => {\n      this.sliderOnInput(\"ssMin\");\n    };\n    document.getElementById(\"ssMaxSlider\").oninput = () => {\n      this.sliderOnInput(\"ssMax\");\n    };\n    document.getElementById(\"open-model-button\").onclick = () => {\n      // Proxy to override the default behavior of file input type\n      document.getElementById(\"file-input\").click();\n    };\n    document.getElementsByName(\"displaymode\").forEach(element => {\n      let inputElement = element;\n      inputElement.onclick = () => {\n        this._displayFilter.setFilterSelection(inputElement.id);\n        this._displayFilter.gatherFilteredNodes(this._modelData);\n        this._displayFilter.setRenderingSelection();\n      };\n    });\n    document.getElementsByName(\"gradientmode\").forEach(element => {\n      let inputElement = element;\n      inputElement.onclick = () => {\n        this._displayFilter.setGradientSelection(inputElement.id);\n        this._displayFilter.setRenderingSelection();\n      };\n    });\n    let compButtons = document.getElementById(\"companyFilter\").getElementsByClassName(\"companyFilterButton\");\n    for (let element of compButtons) {\n      let htmlelement = element;\n      htmlelement.onclick = () => {\n        if (htmlelement.classList.contains(\"selected\")) {\n          htmlelement.classList.remove(\"selected\");\n          this._displayFilter.removeCompany(htmlelement.alt);\n        } else {\n          htmlelement.classList.add(\"selected\");\n          this._displayFilter.addCompany(htmlelement.alt);\n        }\n        this._displayFilter.gatherFilteredNodes(this._modelData);\n        this._displayFilter.setRenderingSelection();\n      };\n    }\n    document.getElementById(\"file-input\").onchange = e => {\n      // Once a file has been selected by the user, use the file information to\n      // gather the associated relevant data like thumbnails\n      let fileChoice = e.target.value;\n      let filename = fileChoice.replace(/^.*[\\\\\\/]/, \"\");\n      let modelThumbnail = document.createElement(\"a\");\n      let modelname = filename.split(\".\", 1)[0];\n      modelThumbnail.id = modelname;\n      modelThumbnail.href = \"\";\n      modelThumbnail.className = \"model-thumb\";\n      modelThumbnail.setAttribute(\"model\", modelname);\n      let imgPath = directoryPath + \"/data/thumbnails/\" + modelname + \".png\";\n      // Check to see if the selected model has a corresponding thumbnail made\n      fetch(imgPath).then(resp => {\n        if (resp.ok) {\n          let modelImg = document.createElement(\"img\");\n          modelImg.src = imgPath;\n          modelThumbnail.appendChild(modelImg);\n        } else {\n          modelThumbnail.innerHTML = modelname;\n          console.log(\"No Image for this Model was found.\");\n        }\n      });\n      document.getElementById(\"models-scroller\").appendChild(modelThumbnail);\n      // Now update the event callbacks for the thumbnails\n      this.updateModelList();\n    };\n  } // End setting event handlers\n} // End app class\n\n//# sourceURL=webpack:///./src/js/app.js?");

/***/ })

/******/ });